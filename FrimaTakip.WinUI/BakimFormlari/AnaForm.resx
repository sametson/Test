<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageCollection1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="DevExpress.Utils.v11.2" name="DevExpress.Utils.v11.2, Version=11.2.7.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" />
  <data name="imageCollection1.ImageStream" type="DevExpress.Utils.ImageCollectionStreamer, DevExpress.Utils.v11.2" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFpEZXZFeHByZXNzLlV0aWxzLnYxMS4yLCBWZXJzaW9uPTExLjIu
        Ny4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI4OGQxNzU0ZDcwMGU0OWEMAwAAAFFT
        eXN0ZW0uRHJhd2luZywgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRv
        a2VuPWIwM2Y1ZjdmMTFkNTBhM2EFAQAAAChEZXZFeHByZXNzLlV0aWxzLkltYWdlQ29sbGVjdGlvblN0
        cmVhbWVyAgAAAAlJbWFnZVNpemUERGF0YQQHE1N5c3RlbS5EcmF3aW5nLlNpemUDAAAAAgIAAAAF/P//
        /xNTeXN0ZW0uRHJhd2luZy5TaXplAgAAAAV3aWR0aAZoZWlnaHQAAAgIAwAAADwAAAA8AAAACQUAAAAP
        BQAAACUVAAACIRUAAIlQTkcNChoKAAAADUlIRFIAAAA8AAAAPAgGAAAAOvzZcgAAAAFzUkdCAK7OHOkA
        AAAEZ0FNQQAAsY8L/GEFAAAACXBIWXMAAA68AAAOvAGVvHJJAAAUtklEQVRoQ+3bB1RUV7sGYCMDCBYU
        Qar0DgMz9N47gmLN/+dPzDUxJpbYRbFiL1FRqVKkS69SBRXsKFiwG0vUYO89mrz320eGgCHXqLmQu9Y9
        a71rzpwZh/Psb58Dzt67W7f/396vBYKDg9FRhgwZgrYZPHgw3k5QUBDeTmBgIN7OoEGDIEpAQADejr+/
        PzqKn58fWN5P9I539+nTh33gHyIlJYX+/ftDVVUVurq6MDMzg62tLdzd3bmT8PX1hbe3N7y8vODp6ckd
        d3Nzg6urK5ydneHk5ARHR0c4ODjAzs6O+7c2NjawsrKCpaUlLCwsIBQKIRAIuM82NTWFiYkJjI2NYWRk
        BENDQ+jr60NPT69zwB01wl899sknn4DH40FSUhLS0tLo27cvVFRUuJNnuH80mJ08S/fu3SEmJtYaBmJh
        x9hr7D1/tUHe9T72WZ1S4SGVDzBiD7gEldyA84ZqCL5fD61BX0HR2huy+kL0VFCFeA8pDvtXImoQ1ih/
        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
        +t/zL93jdQFPwQAAAABJRU5ErkJgggs=
</value>
  </data>
</root>